<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.book.module.mapper.BookMapper">

    <insert id="insert" parameterType="com.example.book.module.entity.Book">
        insert into book (
        <if test="book.images != null and book.images != ''">images,</if>
        <if test="book.bookTitle != null and book.bookTitle != ''">book_title,</if>
        <if test="book.bookRating != null">book_rating,</if>
        <if test="book.bookReview != null and book.bookReview != ''">book_review,</if>
        <if test="book.createTime != null">create_time,</if>
        <if test="book.updatetime != null">update_time,</if>
        is_deleted
        ) values (
        <if test="book.images != null and book.images != ''">#{book.images},</if>
        <if test="book.bookTitle != null and book.bookTitle != ''">#{book.bookTitle},</if>
        <if test="book.bookRating != null">#{book.bookRating},</if>
        <if test="book.bookReview != null and book.bookReview != ''">#{book.bookReview},</if>
        <if test="book.createTime != null">#{book.createTime},</if>
        <if test="book.updatetime != null">#{book.updateTime},</if>
        #{book.isDeleted}
    )
    </insert>

    <update id="update" parameterType="com.example.book.module.entity.Book">
        update book
        set id = #{book.id},
            <if test="book.images != null and book.images != ''">images = #{book.images},</if>
            <if test="book.bookTitle != null and book.bookTitle != ''">book_title = #{book.bookTitle},</if>
            <if test="book.bookRating != null">book_rating = #{book.bookRating},</if>
            <if test="book.bookReview != null and book.bookReview != ''">book_review = #{book.bookReview},</if>
            <if test="book.updatetime != null">update_time = #{book.updateTime}</if>
        where id = #{book.id}
    </update>

    <insert id="edit" parameterType="com.example.book.module.entity.Book">
        <choose>
            <when test="book.id == null">
                insert into book (
                <if test="book.images != null and book.images != ''">images,</if>
                <if test="book.bookTitle != null and book.bookTitle != ''">book_title,</if>
                <if test="book.bookRating != null">book_rating,</if>
                <if test="book.bookReview != null and book.bookReview != ''">book_review,</if>
                <if test="book.categoryId != null">category_id,</if>
                <if test="book.createTime != null">create_time,</if>
                <if test="book.updatetime != null">update_time,</if>
                is_deleted
                ) values (
                <if test="book.images != null and book.images != ''">#{book.images},</if>
                <if test="book.bookTitle != null and book.bookTitle != ''">#{book.bookTitle},</if>
                <if test="book.bookRating != null">#{book.bookRating},</if>
                <if test="book.bookReview != null and book.bookReview != ''">#{book.bookReview},</if>
                <if test="book.categoryId != null">#{book.categoryId},</if>
                <if test="book.createTime != null">#{book.createTime},</if>
                <if test="book.updatetime != null">#{book.updateTime},</if>
                #{book.isDeleted}
                )
            </when>

            <otherwise>
                update book
                set id = #{book.id},
                <if test="book.images != null and book.images != ''">images = #{book.images},</if>
                <if test="book.bookTitle != null and book.bookTitle != ''">book_title = #{book.bookTitle},</if>
                <if test="book.bookRating != null">book_rating = #{book.bookRating},</if>
                <if test="book.bookReview != null and book.bookReview != ''">book_review = #{book.bookReview},</if>
                <if test="book.categoryId != null">category_id = #{book.categoryId},</if>
                <if test="book.updatetime != null">update_time = #{book.updateTime}</if>
                where id = #{book.id}
            </otherwise>
        </choose>
    </insert>

    <select id="getByOffset" resultType="com.example.book.module.entity.Book">
        select * from book
        where is_deleted = 0
        <if test = "keyword != null and keyword != ''">
            AND (
                book_title LIKE CONCAT('%', #{keyword}, '%')
                <if test="ids != null and ids != ''">
                    OR category_id IN (${ids})
                </if>
            )
        </if>
        order by id desc
        limit #{limit} offset #{offset}
    </select>

    <resultMap id="BookWithCategoryMap" type="com.example.book.module.DTO.BookDto">
        <id property="bookId" column="id"/>
        <result property="images" column="images"/>
        <result property="bookTitle" column="book_title"/>
        <result property="bookRating" column="book_rating"/>
        <result property="bookCategory" column="category_name"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <select id="getBookWithCategory" resultMap="BookWithCategoryMap">
        SELECT
            b.id,
            b.book_title,
            b.images,
            b.book_rating,
            c.category_name,
            b.create_time,
            b.update_time
        FROM book b
        LEFT JOIN category c ON b.category_id = c.id
        WHERE b.is_deleted = 0
            <if test = "keyword != null and keyword != ''">
                AND (
                    b.book_title LIKE CONCAT('%', #{keyword}, '%')
                    <if test="ids != null and ids != ''">
                        OR b.category_id IN (${ids})
                    </if>
                )
            </if>
        ORDER BY b.id DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>
</mapper>